
# mysql 워크벤치에서 DB생성후 연동해주세요. create database springweb2;
# JDBC 연동
# 1. 해당 JDBC 클래스를 호출한다.
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# 2. 해당 JDBC 클래스 이용한 접속할 DB서버 경로 설정
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
# 3. DB서버의 아이디 와 비밀번호
spring.datasource.username=root
spring.datasource.password=1234
# 4. JPA DDL 에 대해 옵션
#       1. 서버 켜질때 DDL 생성여부
#spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = update

# 작업시 테스트 확인용
# 5. JPA 가 SQL 실행한 결과 보고 있을때 CONSOLE에 실행된 SQL 표시
#spring.jpa.properties.hibernate.show_sql=true
# 6. CONSOLE에 실행된 SQL 표시 할때 엔터처리
#spring.jpa.properties.hibernate.format_sql=true
# 7. 샘플 데이터
#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true
# 샘플데이터 ( resources 폴더내 data.sql 파일 내 코드를 읽어드린다. )


# =============================== KAKAO OAUTH2 CONNECT =================================
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:8080/login/oauth2/code/kakao

spring.security.oauth2.client.registration.kakao.client-id=50fc1c18af02d58d843af3f625b5f621
spring.security.oauth2.client.registration.kakao.client-secret=f7N8WMOx3a8JNtTn3LsL2G8EaAHYCsWo
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
# =============================== ===================== =================================

# =============================== NAVER OAUTH2 CONNECT =================================
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.user-name-attribute=response
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:8080/login/oauth2/code/naver

spring.security.oauth2.client.registration.naver.client-id=ZiyCyM98xpX2tYPstd66
spring.security.oauth2.client.registration.naver.client-secret=YxqLXGnJRR
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.scope=nickname,email
# =============================== ===================== =================================

# =============================== GOOGLE OAUTH2 CONNECT =================================
spring.security.oauth2.client.registration.google.client-id=35609966858-5puj6glir1sprbodtgh7ha4rrqu506b3.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
# =============================== ===================== =================================
















